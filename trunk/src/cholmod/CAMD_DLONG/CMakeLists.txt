
# Set required variables.
SET(CAMDDLONG_LIBRARY_NAME "camd_dlong")

FILE(GLOB_RECURSE CAMDDLONG_LIBRARY_HEADERS
  ${SLAM_P_P_SOURCE_DIR}/include/cholmod/*.h)

INCLUDE_DIRECTORIES(
  ${PROJECT_SOURCE_DIR}/include/cholmod/CAMD/)

# support for GPU BLAS
IF(SLAM_P_P_GPU_BLAS)
	ADD_DEFINITIONS(-DGPU_BLAS)
ENDIF(SLAM_P_P_GPU_BLAS)

IF(CMAKE_SIZEOF_VOID_P EQUAL 8 AND NOT SLAM_P_P_32BIT_BUILD AND NOT SLAM_P_P_SHORT_CHOLMOD)
	ADD_DEFINITIONS(-DNLONG)
ELSE(CMAKE_SIZEOF_VOID_P EQUAL 8 AND NOT SLAM_P_P_32BIT_BUILD AND NOT SLAM_P_P_SHORT_CHOLMOD)
	ADD_DEFINITIONS(-DDLONG)
ENDIF(CMAKE_SIZEOF_VOID_P EQUAL 8 AND NOT SLAM_P_P_32BIT_BUILD AND NOT SLAM_P_P_SHORT_CHOLMOD)
# compile with the opposite LONGness than CHOLMOD

SET(CAMDDLONG_LIBRARY_SOURCES
  camd_1.c
  camd_2.c
  camd_aat.c
  camd_control.c
  camd_defaults.c
  camd_dump.c
  camd_info.c
  camd_order.c
  camd_postorder.c
  camd_preprocess.c
  camd_valid.c)

# Build and install SLAM_plus_plus executable.
ADD_LIBRARY(${CAMDDLONG_LIBRARY_NAME} STATIC
 ${CAMDDLONG_LIBRARY_SOURCES}
 ${CAMDDLONG_LIBRARY_HEADERS})
INSTALL(TARGETS ${CAMDDLONG_LIBRARY_NAME}
  RUNTIME DESTINATION bin
  LIBRARY DESTINATION lib
  ARCHIVE DESTINATION lib)
